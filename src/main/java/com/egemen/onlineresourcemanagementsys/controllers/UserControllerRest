package com.egemen.onlineresourcemanagementsys.controllers;

import com.egemen.onlineresourcemanagementsys.entities.User;
import jakarta.servlet.http.HttpSession;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.server.ResponseStatusException;

import java.util.HashMap;
import java.util.Map;

@Controller
@RequestMapping("/")
public class UserController {
    private final RestTemplate restTemplate;
    private static final String AUTH_SERVICE_URL = "http://192.168.0.18:1546/users";

    public UserController(RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    @GetMapping("/users/login")
    public String login() {
        return "login";
    }

    @PostMapping("/users/logininfo")
    public String loginProcess(@RequestParam("username") String username,
                               @RequestParam("password") String password,
                               Model model, HttpSession session) {
        if (username.isBlank() || password.isBlank()) {
            model.addAttribute("error", "Username and password cannot be empty.");
            return "login";
        }

        try {
            // Call AuthService using RestTemplate
            String authServiceUrl = "http://AUTHSERVICE/auth/login";
            Map<String, String> request = Map.of("username", username, "password", password);

            ResponseEntity<User> response = restTemplate.postForEntity(authServiceUrl, request, User.class);

            if (response.getStatusCode() == HttpStatus.OK) {
                User user = response.getBody();
                session.setAttribute("user", user);
                return "redirect:/dashboard";
            } else {
                model.addAttribute("error", "Invalid username or password.");
                return "login";
            }
        } catch (Exception e) {
            model.addAttribute("error", "An error occurred: " + e.getMessage());
            return "login";
        }
    }


    @GetMapping("/users/register")
    public String register() {
        return "register";
    }

    @PostMapping("/users/registerProcess")
    public String registerProcess(@RequestParam("username") String username,
                                  @RequestParam("password") String password,
                                  Model model) {
        if (username.isBlank() || password.isBlank()) {
            model.addAttribute("error", "Username and password cannot be empty.");
            return "register";
        }

        try {
            // Create the user JSON payload
            Map<String, String> newUser = new HashMap<>();
            newUser.put("username", username);
            newUser.put("password", password);

            // Send the registration request to the AuthService
            String authServiceUrl = AUTH_SERVICE_URL + "/register";
            restTemplate.postForEntity(authServiceUrl, newUser, String.class);

            return "redirect:/users/login";
        } catch (Exception e) {
            model.addAttribute("error", "Failed to register user: " + e.getMessage());
            return "register";
        }
    }

    @PostMapping("/users/logout")
    public String logout(HttpSession session) {
        session.invalidate(); // Clear the session
        return "redirect:/users/login"; // Redirect to login page
    }
}
